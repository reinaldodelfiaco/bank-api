/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.12).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Cliente;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-04-09T10:45:06.106Z")

@Api(value = "cliente", description = "the cliente API")
@RequestMapping(value = "/bank-api/v1")
public interface ClienteApi {

    @ApiOperation(value = "Cadastrar cliente", nickname = "cadastraCliente", notes = "Cadastra um novo cliente", response = Cliente.class, authorizations = {
        @Authorization(value = "BasicAuth")
    }, tags={ "Cliente", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Cadastro efetuado com sucesso", response = Cliente.class),
        @ApiResponse(code = 400, message = "Requisição inválida"),
        @ApiResponse(code = 500, message = "Erro interno no servidor") })
    @RequestMapping(value = "/cliente",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<Cliente> cadastraCliente(@ApiParam(value = ""  )  @Valid @RequestBody Cliente cliente_) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"senha\" : \"senha123\",  \"cpf\" : \"12345678910\",  \"conta\" : [ {    \"transacoes\" : [ {      \"tipo\" : \"debito\",      \"data\" : \"2000-01-23T04:56:07.000+00:00\",      \"valor\" : 6.027456183070403,      \"id\" : 0    }, {      \"tipo\" : \"debito\",      \"data\" : \"2000-01-23T04:56:07.000+00:00\",      \"valor\" : 6.027456183070403,      \"id\" : 0    } ],    \"numero\" : 7463935,    \"saldo\" : 101.34,    \"agencia\" : 975,    \"digito\" : 3  }, {    \"transacoes\" : [ {      \"tipo\" : \"debito\",      \"data\" : \"2000-01-23T04:56:07.000+00:00\",      \"valor\" : 6.027456183070403,      \"id\" : 0    }, {      \"tipo\" : \"debito\",      \"data\" : \"2000-01-23T04:56:07.000+00:00\",      \"valor\" : 6.027456183070403,      \"id\" : 0    } ],    \"numero\" : 7463935,    \"saldo\" : 101.34,    \"agencia\" : 975,    \"digito\" : 3  } ],  \"id\" : 234,  \"titular\" : \"Janete Silva\"}", Cliente.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ClienteApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
